version: '3.8'

services:
    postgres:
        container_name: postgres
        image: postgres:15.2-alpine3.17
        environment:
            POSTGRES_DB: postgres_db
            POSTGRES_USER: root
            POSTGRES_PASSWORD: postgres
            PGDATA: /data/postgres
        restart: always
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 5s
            timeout: 5s
            retries: 5
        volumes:
            - postgres:/var/lib/postgresql/data
            - ./db/initdb.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - "5432:5432"
        networks:
            - persistent_bridge_network
    pgadmin:
        container_name: pgadmin4
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: root
        ports:
            - "5050:80"
        depends_on:
            postgres:
                condition: service_healthy
    worker1:
        build:
            context: .
            dockerfile: worker.dockerfile
        container_name: worker1
        environment:
            KAFKA_BROKERS: '${MY_IP}:19092,${MY_IP}:29092,${MY_IP}:39092'
            KAFKA_CLIENT_ID: 'my-client'
            POSTGRES_DBNAME: 'postgres_db'
            POSTGRES_USERNAME: 'root'
            POSTGRES_PASSWORD: 'postgres'
            POSTGRES_HOST: '${MY_IP}'
            POSTGRES_PORT: 5432
            POSTGRES_SSL_MODE: 'disable'
            POSTGRES_DRIVER_NAME: 'postgres'
        restart: always
        depends_on:
            postgres:
                condition: service_healthy
    worker2:
        build:
            context: .
            dockerfile: worker.dockerfile
        container_name: worker2
        environment:
            KAFKA_BROKERS: '${MY_IP}:19092,${MY_IP}:29092,${MY_IP}:39092'
            KAFKA_CLIENT_ID: 'my-client'
            POSTGRES_DBNAME: 'postgres_db'
            POSTGRES_USERNAME: 'root'
            POSTGRES_PASSWORD: 'postgres'
            POSTGRES_HOST: '${MY_IP}'
            POSTGRES_PORT: 5432
            POSTGRES_SSL_MODE: 'disable'
            POSTGRES_DRIVER_NAME: 'postgres'
        restart: always
        depends_on:
            postgres:
                condition: service_healthy
    api:
        build:
            context: .
            dockerfile: api.dockerfile
        container_name: api
        ports:
            - "9091:9091"
        environment:
            LISTEN_ADDRESS: '0.0.0.0:9091'
            KAFKA_BROKERS: '${MY_IP}:19092,${MY_IP}:29092,${MY_IP}:39092'
            KAFKA_CLIENT_ID: 'my-client'
            POSTGRES_DBNAME: 'postgres_db'
            POSTGRES_USERNAME: 'root'
            POSTGRES_PASSWORD: 'postgres'
            POSTGRES_HOST: '${MY_IP}'
            POSTGRES_PORT: 5432
            POSTGRES_SSL_MODE: 'disable'
            POSTGRES_DRIVER_NAME: 'postgres'
        restart: always
        depends_on:
            postgres:
                condition: service_healthy
            worker1:
                condition: service_started
            worker2:
                condition: service_started
volumes:
    postgres:
        driver: local
networks:
    persistent_bridge_network:
        driver: bridge
